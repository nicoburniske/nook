[[language]]
name = "rust"
language-servers = ["rust-analyzer"]

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
check.overrideCommand = [
  "cargo",
  "check",
  "--workspace",
  "--target-dir=target/rust-analyzer",
  "--message-format=json-diagnostic-rendered-ansi",
  "--exclude", "atsama5d27",
  "--exclude", "at91bootstrap-ffi",
  "--exclude", "cryptoauthlib",
  "--exclude", "libblur",
  "--exclude", "loader",
  "--exclude", "log-serial",
  "--exclude", "log-usb-serial",
  "--exclude", "skeleton",
  "--exclude", "crypto-client",
  "--exclude", "syscall-arg-invalid-addr-test",
  "--exclude", "micro-ecc-sys",
  "--exclude", "rust-fatfs",
  "--exclude", "tar",
  "--exclude", "mass-storage"
]
check.extraEnv = { RUSTFLAGS = "--check-cfg=cfg(keyos)" }

cargo.allTargets = false
cargo.target = "armv7a-unknown-xous-elf"
cargo.features = []
cargo.buildScripts.enable = true
cargo.buildScripts.overrideCommand = [
  "cargo",
  "check",
  "--workspace",
  "--target-dir=target/rust-analyzer",
  "--message-format=json",
  "--quiet",
  "--keep-going",
  "--exclude", "atsama5d27",
  "--exclude", "at91bootstrap-ffi",
  "--exclude", "cryptoauthlib",
  "--exclude", "libblur",
  "--exclude", "loader",
  "--exclude", "log-serial",
  "--exclude", "log-usb-serial",
  "--exclude", "skeleton",
  "--exclude", "crypto-client",
  "--exclude", "syscall-arg-invalid-addr-test",
  "--exclude", "micro-ecc-sys",
  "--exclude", "rust-fatfs",
  "--exclude", "tar",
  "--exclude", "mass-storage"
]

cargo.extraEnv = { RUSTFLAGS = "--check-cfg=cfg(keyos)" }
files.exclude = ["test-apps/"]
procMacro.enable = true
diagnostics.disabled = ["unresolved-proc-macro"]

[language-server.slint-lsp]
command = "slint-lsp"
args = ["-L", "ui=ui/ui"]
